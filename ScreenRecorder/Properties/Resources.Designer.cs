//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScreenRecorder.Properties {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScreenRecorder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
        ///   재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Advanced Settings과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string AdvancedSettings {
            get {
                return ResourceManager.GetString("AdvancedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Browse과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture Cancel과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureCancel {
            get {
                return ResourceManager.GetString("CaptureCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture Cursor과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureCursor {
            get {
                return ResourceManager.GetString("CaptureCursor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture Display과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureDisplay {
            get {
                return ResourceManager.GetString("CaptureDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture Region과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureRegion {
            get {
                return ResourceManager.GetString("CaptureRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture region by user selection과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureRegionByUserSelection {
            get {
                return ResourceManager.GetString("CaptureRegionByUserSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Capture Window과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string CaptureWindow {
            get {
                return ResourceManager.GetString("CaptureWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The display you set could not be found과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string DisplayNotFound {
            get {
                return ResourceManager.GetString("DisplayNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Audio Bitrate과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderAudioBitrate {
            get {
                return ResourceManager.GetString("EncoderAudioBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Audio Codec과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderAudioCodec {
            get {
                return ResourceManager.GetString("EncoderAudioCodec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording Path과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderBaseDirectory {
            get {
                return ResourceManager.GetString("EncoderBaseDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display Device과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderCaptureDisplay {
            get {
                return ResourceManager.GetString("EncoderCaptureDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File Format과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderFileFormat {
            get {
                return ResourceManager.GetString("EncoderFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording Settings과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderSettings {
            get {
                return ResourceManager.GetString("EncoderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording (Pause)과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderStatusPauseMessage {
            get {
                return ResourceManager.GetString("EncoderStatusPauseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderStatusStartMessage {
            get {
                return ResourceManager.GetString("EncoderStatusStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Waiting for recording과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderStatusStopMessage {
            get {
                return ResourceManager.GetString("EncoderStatusStopMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video Bitrate과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderVideoBitrate {
            get {
                return ResourceManager.GetString("EncoderVideoBitrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Video Codec과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string EncoderVideoCodec {
            get {
                return ResourceManager.GetString("EncoderVideoCodec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exit과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to start recording과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string FailedToStartRecording {
            get {
                return ResourceManager.GetString("FailedToStartRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hotkey Settings과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string HotkeySettings {
            get {
                return ResourceManager.GetString("HotkeySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a recording folder in File Explorer과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string OpenEncodingFolderInFileExplorer {
            get {
                return ResourceManager.GetString("OpenEncodingFolderInFileExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a folder in File Explorer과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string OpenFolderInFileExplorer {
            get {
                return ResourceManager.GetString("OpenFolderInFileExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Primary Display과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string PrimaryDisplay {
            get {
                return ResourceManager.GetString("PrimaryDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recording path does not exist과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string RecordingPathDoesNotExist {
            get {
                return ResourceManager.GetString("RecordingPathDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Region less than 100 x 100 cannot be recorded과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string RegionSizeError {
            get {
                return ResourceManager.GetString("RegionSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sets the recording path과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string SetsTheRecordingPath {
            get {
                return ResourceManager.GetString("SetsTheRecordingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The recording path is not set. Please set the recording path과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        public static string TheRecordingPathIsNotSet {
            get {
                return ResourceManager.GetString("TheRecordingPathIsNotSet", resourceCulture);
            }
        }
    }
}
